def(player) // 1 for player 1, and 2 for player 2
Set(player, 1)

// Board fields from top left to top right, and then next row etc
// 0: No player
// 1: Player 1 has taken the field
// 2: Player 2 has taken the field
def(x1)
def(x2)
def(x3)
def(x4)
def(x5)
def(x6)
def(x7)
def(x8)
def(x9)

def(lastMove)

has_3_in_a_row(_player)
{
  if x1 == _player
  {
    if x1 == x2
    {
      if x2 == x3
      {
        PrintText("Yeah! Someone just won the game!")
        return 1
      }
    }
  }
  return 0
}

exit()
{
  PrintText("Exiting program")
  failhere...
}

select_position(_player, _position)
{
  if _position == 1
  {
    if x1 == 0
    {
      Set(x1, _player)
      return
    }
    PrintText("Doh! Field has already been taken by player ")
    Print(_player)
    NewLine()
    exit()
  }
}

print_board()
{
  //Clear()
  SetCursor(0,0)
  PrintTextLine("========= BOARD ==========")
  Print(x1)
  Print(x2)
  PrintLine(x3)
  Print(x4)
  Print(x5)
  PrintLine(x6)
  Print(x7)
  Print(x8)
  PrintLine(x9)
  PrintTextLine("===========================")
}

next_player()
{
  if player == 1
  {
    Set(player, 2)
    return
  }
  Set(player, 1)
}

play()
{
  print_board()

  PrintText("Player ")
  Print(player)
  PrintTextLine(" (select field 1-9):  ")
  //Print(lastMove)
  SetCursor(25,5)


  def(position)
  Set(position, ReadKey())
  //Set(lastMove, position)
  PrintTextLine("")
  select_position(player, position)
  undef(position)

  def(y)
  Set(y, has_3_in_a_row(player))
  undef(y)

  next_player()
  play()
}

play()

























//Add(x,y)
//{
//	Push(x)
//	Push(y)
//	Plus()
//	return Pop()
//	//Pop() // <-- Cant run code after a return statement
//}
//
//// Loop that counts from 0 to 10
//Loop(start, end)
//{
//	if start < end
//	{
//	Print(start)
//	Set(start, Add(start, 1))
//	Loop(start, end)
//	}
//}
//Loop(0, 50)
//
//Print(1000)














//def(someNumber)
//Set(someNumber, 10)
//
//
//if someNumber == 10
//
//Print(999)
//
//endif
//PrintText("Hello world")
//
//
//// Loop that counts from 0 to 10
//def(i)
//def(x)
//loop(x)
//{
//	if x < 11
//	Print(x)
//	Set(x, Add(x))
//
//	//endif
//}
//
//undef(x)
//
//Print(Rand(0, 10))
//
//
//fib()
//{
//	_fib(x,y)
//	{
//		Print(y)
//		//Add(x, y)
//		Sleep(500)
//		_fib(y,Add(x,y))
//	}
//
//	Print(1)
//	_fib(1,1)
//}
//
//PrintText("Hej ""(	)  \"    \"med dig")
////Print(Pop())
//
//fib()
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






















//def(var1)
//def(var2)
//def(var3)
//
//Set(var1, 1)
//Set(var2, 1)
//Set(var3, -1)
//
//Fib()
//{
//Push(vr1))
//Push(vr2))
//Plus()
//Set(var3, Pop())
//Print(vr3))
//Set(var1, vr2))
//Set(var2, vr3))
//Set(var3, 0) // not needed, just for comfort :D
//Fib() // Do not have an end since we dont have if else ;( yet....    
//	  # ;)
//	  ; Comments ;)
//}
//
//Fib()
//
//
//def(x)
//Set(x,3)
//
//AddX(foo)
//{
//Print(x)
//Push(x)
//Push(fo))
//Plus()
//Set(x, Pop())
//AddX(x) // Call Loop Again To Make It Go Around
//}
//
//AddX(3)



//def(x)
//Set(x, 10)
//
//AddXPrint(para)
//{
//Print(x)
//Push(x)
//Push(pra))
//Plus()
//}
//
//AddXPrint(10)
//AddXPrint(10)
//AddXPrint(10)
//AddXPrint(10)
//AddXPrint(10)
//AddXPrint(10)

//
//
//def(x)
//def(y)
//Set(x, 10)
//Set(y, 13)
//
//Push(x)
//Push(y)
//
//Minus()
//Print(Peek())
//
//Print(StackCount())
//
//
//
//AddOne(para)
//{
//Push(pra))
//Push(1)
//Plus()
//}
//
//AddOne(3)
//Print(Pop())
//
//AddOne(para1, para2)
//{
//Print(pra1))
//Print(pra2))
//}
//
//AddOne(3, 5)

